{"version":3,"file":"static/js/83.e50cafd6.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/http.hook.js","components/services/MarvelService.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: 'auto', borderRadius: '50%'}} alt='error' src={img}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './comicsList.scss';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../services/MarvelService';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ComicsList = (props) => {\r\n\r\n    const [comics, setComics] = useState([])\r\n    const [newItemLoading, setNewItemLoading] = useState(false)\r\n    const [offset, setOffset] = useState(220)\r\n    const [comicsEnd, setComicsEnd] = useState(false) \r\n\r\n    const {error, loading, getAllComics} = useMarvelService()\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n    }, [])\r\n    \r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n        getAllComics(offset)\r\n        .then(onComicsLoaded)\r\n    }\r\n\r\n    const onComicsLoaded = (comicsList) => {\r\n        let ended = false \r\n        if(comicsList.length < 8) {\r\n            ended = true \r\n        }\r\n\r\n        setComics(comics => [...comics, ...comicsList])\r\n        setNewItemLoading(newItemLoading => false) \r\n        setOffset(offset => offset + 8)\r\n        setComicsEnd(comics => ended)\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}$</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comics)\r\n    const errorMessage = error ? <ErrorMessage/> : null\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null \r\n    \r\n    return ( \r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items} \r\n            <button className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': comicsEnd ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import './appBanner.scss';\r\nimport avengers from '../../resources/image/Avengers.png';\r\nimport avengersLogo from '../../resources/image/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return ( \r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\" />\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return ( \r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback( async (url, method = \"GET\" , body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers})\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json()\r\n            setLoading(false)\r\n            return data \r\n        } catch (e) {\r\n            setLoading(false) \r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useHttp } from \"../../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService = () => { \r\n    const {loading, request, error, clearError} = useHttp()\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=13832a95be1beb7b652a019238c1d66a';\r\n    const _baseOffset = 210;\r\n    // getResource = async (url) => {\r\n    //     let res = await fetch(url);\r\n    \r\n    //     if (!res.ok) {\r\n    //         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    //     }\r\n    \r\n    //     return await res.json();\r\n    // }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const getAllComics = async (offset = 220) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","borderRadius","alt","src","img","props","comics","setComics","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnd","setComicsEnd","error","loading","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","comicsList","ended","length","items","arr","map","item","i","imgStyle","thumbnail","className","children","_jsxs","Link","to","concat","id","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment","ComicsList","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","path","extension","homepage","urls","wiki","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getComic"],"sourceRoot":""}